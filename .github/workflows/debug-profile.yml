# Debugging and Profiling Workflow for OpenKeeper
#
# This workflow automates graphics and performance profiling using RenderDoc and async-profiler.
#
# - RenderDoc is used to capture a frame after 20s, then postprocesses the .rdc for draw call analysis.
# - async-profiler is used to capture CPU, memory, and file IO profiles, and generates flamegraphs.
#
# See: https://github.com/tonihele/OpenKeeper/wiki/Debugging-and-Profiling

name: Debugging and Profiling

on:
  workflow_dispatch:
  push:

env:
  DK2_DEMO_URL: 'https://archive.org/download/DungeonKeeper2Demo/DungeonKeeper2Demo.exe'

jobs:
  setup-dk2:
    runs-on: ubuntu-latest
    steps:
      - name: Cache DK2 Demo
        id: cache-dk2
        uses: actions/cache@v4
        with:
          key: dk2-demo
          lookup-only: true
          path: |
            DK2
            openkeeper.properties
            /home/runner/.OpenKeeper/openkeeper.properties
      - name: Download
        if: steps.cache-dk2.outputs.cache-hit != 'true'
        run: |
          set -eux
          curl -sS -L -OJ "$DK2_DEMO_URL"
          sudo apt install -y 7zip unshield
          7z x DungeonKeeper2Demo.exe
          unshield x disk1/data1.cab
          mv Program_Files DK2
          echo "DungeonKeeperIIFolder(string)=$PWD/DK2/"  > openkeeper.properties
          mkdir -p ~/.OpenKeeper
          echo "MusicEnabled(bool)=false"  > ~/.OpenKeeper/openkeeper.properties
      #- uses: mxschmitt/action-tmate@v3
      #  timeout-minutes: 15

  renderdoc-capture:
    name: RenderDoc Capture and Analysis
    needs: setup-dk2
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'graalvm'
      - uses: actions/cache/restore@v4
        with:
          key: dk2-demo
          fail-on-cache-miss: true
          path: |
            DK2
            openkeeper.properties
            /home/runner/.OpenKeeper/openkeeper.properties
      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y xvfb wget unzip libvulkan1
      - name: Install RenderDoc
        run: |
          wget -nv https://renderdoc.org/stable/1.39/renderdoc_1.39.tar.gz -O renderdoc.tar.gz
          sudo tar xv --strip-components=1 -C /usr/local -f renderdoc.tar.gz
          #export PATH=$PWD/renderdoc_1.39/bin:$PATH
      - name: Build OpenKeeper
        run: ./gradlew build --no-daemon
      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1280x720x24 &
          echo "DISPLAY=:99" >> $GITHUB_ENV
          sleep 3
      - name: Launch and capture with RenderDoc
        run: |
          set -eux
          renderdoccmd capture --wait-for-exit --opt-hook-children ./gradlew run --no-daemon --args="-debug -level Conquest" &
          sleep 45
          pid=$(pgrep -f 'java.*OpenKeeper')
          renderdoccmd trigger-capture --pid $pid
          sleep 5
          kill $pid
      - name: Find and upload .rdc artifact
        run: |
          RDC=$(find . -name '*.rdc' | head -n1)
          echo "RDC_FILE=$RDC" >> $GITHUB_ENV
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: renderdoc-capture
          path: ${{ env.RDC_FILE }}
      - name: Postprocess .rdc for draw call analysis
        run: |
          pip install renderdoc
          python3 .github/scripts/renderdoc_drawcalls.py "$RDC_FILE"
        shell: bash
      - uses: actions/upload-artifact@v4
        with:
          name: renderdoc-drawcalls
          path: drawcalls.csv

  jfr-profiler:
    name: JFR Profiler
    runs-on: ubuntu-latest
    needs: setup-dk2
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'graalvm'
      - uses: actions/cache/restore@v4
        with:
          key: dk2-demo
          fail-on-cache-miss: true
          path: |
            DK2
            openkeeper.properties
            /home/runner/.OpenKeeper/openkeeper.properties
      - name: Build OpenKeeper
        run: ./gradlew build --no-daemon
      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1280x720x24 &
          echo "DISPLAY=:99" >> $GITHUB_ENV
      - name: Record JFR profile
        env:
          JAVA_OPTS: '-XX:+PreserveFramePointer -XX:+UnlockDiagnosticVMOptions -XX:+DebugNonSafepoints -XX:StartFlightRecording=delay=30s,maxsize=10M,disk=false,dumponexit=true,filename=recording.jfr,settings=profile,path-to-gc-roots=true'
        run: |
          set -eux
          sudo apt update
          sudo apt install -y linux-modules-extra-$(uname -r)
          ls /lib/modules/$(uname -r)/**
          sudo modprobe --verbose snd-dummy || true
          sudo sysctl kernel.perf_event_paranoid=0
          sudo sysctl kernel.kptr_restrict=0
          ./gradlew run --no-daemon --args="-level Conquest" &
          pid=$(pgrep -f 'java.*OpenKeeper')
          sleep 60
          kill $pid

      - uses: actions/upload-artifact@v4
        with:
          name: jfr-recording
          path: recording.jfr
      - name: Install jfrconv
        run: |
          wget -nv https://github.com/async-profiler/async-profiler/releases/download/v4.0/async-profiler-4.0-linux-x64.tar.gz -O async-profiler.tar.gz
          sudo tar xv --strip-components=1 -C /usr/local -f async-profiler.tar.gz
      - name: Postprocess JFR
        run: |
          jfrconv --threads --dot -X ".+glfwSwapBuffers|.+emitEvent" --total --simple --highlight "State[.$]|Control|System" --title 'Time spent' recording.jfr
      - uses: actions/upload-artifact@v4
        with:
          name: jfr-postprocessed
          path: recording.html

  async-profiler:
    name: Async Profiler
    runs-on: ubuntu-latest
    needs: setup-dk2
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'graalvm'
      - uses: actions/cache/restore@v4
        with:
          key: dk2-demo
          fail-on-cache-miss: true
          path: |
            DK2
            openkeeper.properties
            /home/runner/.OpenKeeper/openkeeper.properties
      - name: Build
        run: ./gradlew build --no-daemon

      - name: Setup async-profiler
        run: |
          set -eux
          wget -nv https://github.com/async-profiler/async-profiler/releases/download/v4.0/async-profiler-4.0-linux-x64.tar.gz -O async-profiler.tar.gz
          sudo tar xv --strip-components=1 -C /usr/local -f async-profiler.tar.gz
          sudo sysctl kernel.perf_event_paranoid=0
          sudo sysctl kernel.kptr_restrict=0
      - name: Start Xvfb
        run: |
          Xvfb :99 -screen 0 1280x720x24 &
          echo "DISPLAY=:99" >> $GITHUB_ENV
      - name: Run and profile OpenKeeper
        run: |
          set -eux
          ./gradlew run --no-daemon --args="-level Conquest" &
          pid=$(pgrep -f 'java.*OpenKeeper')
          sleep 30
          asprof -d 30 -o flamegraph -f cpu.html $pid
          asprof -d 30 -e alloc -o flamegraph -f alloc.html $pid
          asprof -d 30 -e file-io -o flamegraph -f fileio.html $pid
          kill $pid
      - uses: actions/upload-artifact@v4
        with:
          name: async-profiler-flamegraphs
          path: |
            cpu.html
            alloc.html
            fileio.html
